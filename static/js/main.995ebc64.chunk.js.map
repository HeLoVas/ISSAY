{"version":3,"sources":["Iss.js","theWorldMap.jpg","Update.js","App.js","reportWebVitals.js","index.js"],"names":["Iss","styles","display","position","top","Lat","left","Lon","width","height","backgroundColor","opacity","borderRadius","zIndex","style","Update","props","onClick","App","afterClick","fetch","then","response","json","users","setState","Loc","isLoading","catch","error","state","Pos","scanJob","val","push","scan","obj","fn","watchDog","Object","values","forEach","this","setTimeout","Number","windowHeight","Math","max","document","documentElement","clientHeight","window","innerHeight","windowWidth","clientWidth","innerWidth","mapHeight","mapWidth","topOffset","leftOffset","issTop","issLeft","imgStyle","className","src","mapImg","alt","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+NAsBeA,EApBH,SAAC,GAAgB,IAEnBC,EAAS,CACXC,QAAS,OACTC,SAAU,WACVC,IALoB,EAAdC,IAMNC,KANoB,EAATC,IAOXC,MAAO,OACPC,OAAQ,OACRC,gBAAiB,QACjBC,QAAS,GACTC,aAAc,MACdC,OAAQ,IAGZ,OACI,qBAAKC,MAAOb,KClBL,MAA0B,wCCUxBc,MARjB,SAAgBC,GACZ,OACE,wBAAQC,QAASD,EAAMC,QAAvB,qBCyGSC,G,wDArGb,aAAe,IAAD,8BACZ,gBAQFC,WAAa,WACXC,MAAM,2CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAC3BC,IAAKF,EACLG,WAAW,OAEZC,OAAM,SAAAC,GAAK,OAAI,EAAKJ,SAAS,CAAEI,QAAOF,WAAW,QAdlD,EAAKG,MAAQ,CACXH,WAAW,EACXD,IAAK,GACLG,MAAO,MALG,E,gEAmBS,IAAD,OAClBT,MAAM,2CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAC3BC,IAAKF,EACLG,WAAW,OAEZC,OAAM,SAAAC,GAAK,OAAI,EAAKJ,SAAS,CAAEI,QAAOF,WAAW,S,+BAG7C,IAAD,OAEJI,EAAM,GACNC,EAAU,SAACC,GAAD,OAASF,EAAIG,KAAKD,IAG1BE,EAAO,SAAPA,EAAQC,EAAKC,EAAIC,GACNC,OAAOC,OAAOJ,GACtBK,SAAQ,SAAAR,GACRA,GAAsB,kBAARA,GACfE,EAAKF,EAAKI,EAAI,GAEZC,GACFD,EAAGJ,OAMPS,KAAKZ,MAAMH,UACbgB,YAAW,WACTR,EAAK,EAAKL,MAAME,EAAQ,KACvB,KAEFG,EAAKO,KAAKZ,MAAME,EAAQ,GAG3B,IAAI3B,EAAMuC,OAAOb,EAAI,IACjBxB,EAAMqC,OAAOb,EAAI,IAGjBc,EAAeC,KAAKC,IAAIC,SAASC,gBAAgBC,aAAcC,OAAOC,aAAe,GACrFC,EAAcP,KAAKC,IAAIC,SAASC,gBAAgBK,YAAaH,OAAOI,YAAc,GAElFC,EAA0B,GAAdH,EAAiB,IAC7BI,EAAyB,GAAdJ,EAAiB,IAC5BK,GAAab,EAAeW,GAAW,EACvCG,GAAcN,EAAcI,GAAU,EAQtCG,EAJkBF,EAAaF,EAAU,EAIZnD,GAPbmD,EAAU,KAQ1BK,EAJiBF,EAAaF,EAAS,EAIVlD,GAPdkD,EAAS,KAStBK,EAAW,CACf5D,QAAS,OACTC,SAAU,WACVK,MAAOiD,EACPhD,OAAQ+C,EACR3C,OAAQ,KACRT,IAAKsD,EACLpD,KAAMqD,GAGR,OAAOjB,KAAKZ,MAAMH,WAAwB,IAAXZ,EAC/B,yCAEE,sBAAKgD,UAAU,KAAf,UACE,sDACA,8CAAiB1D,EAAjB,kBAAqCE,KACrC,qBAAKyD,IAAKC,EAAQC,IAAI,YAAYpD,MAAOgD,IACzC,cAAC,EAAD,CAAKzD,IAAKuD,EAAQrD,IAAKsD,IACvB,cAAC,EAAD,CAAQ5C,QAAWyB,KAAKvB,oB,GAhGdgD,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjD,MAAK,YAAkD,IAA/CkD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAAS+B,eAAe,SAM1BX,M","file":"static/js/main.995ebc64.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Iss = ({Lat, Lon}) => {\r\n    \r\n    const styles = {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        top: Lat,\r\n        left: Lon,\r\n        width: '10px',\r\n        height: '10px',\r\n        backgroundColor: 'black',\r\n        opacity: 0.8,\r\n        borderRadius: '50%',\r\n        zIndex: 10,\r\n    };\r\n\r\n    return (\r\n        <div style={styles}></div>\r\n    )\r\n}\r\n\r\nexport default Iss;    ","export default __webpack_public_path__ + \"static/media/theWorldMap.8ac096d2.jpg\";","import React from 'react';\r\n\r\nfunction Update(props) {\r\n    return (\r\n      <button onClick={props.onClick}>\r\n        UPDATE\r\n      </button>\r\n    )\r\n  }\r\n\r\n  export default Update;","import React, { Component } from 'react';\nimport Iss from './Iss';\nimport mapImg from './theWorldMap.jpg';\nimport Update from './Update.js';\nimport './App.css';\n/* import testUtils from 'react-dom/test-utils'; */\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      isLoading: true,\n      Loc: [],\n      error: null\n    };\n  }\n\n  afterClick = () => {\n    fetch('http://api.open-notify.org/iss-now.json')\n    .then(response=> response.json())\n    .then(users => this.setState({\n      Loc: users,\n      isLoading: false,\n    }))\n    .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n    componentDidMount() {\n      fetch('http://api.open-notify.org/iss-now.json')\n        .then(response=> response.json())\n        .then(users => this.setState({\n          Loc: users,\n          isLoading: false,\n        }))\n        .catch(error => this.setState({ error, isLoading: false }));\n   }\n \n   render() {\n    /* Extracting the API latidude and Longiude */\n    let Pos = [];\n    let scanJob = (val) => Pos.push(val);\n/*     let Location = Object.values(Pos); */\n\n    const scan = (obj, fn, watchDog) => {\n      const values = Object.values(obj);\n      values.forEach(val => {\n          if(val && typeof val === \"object\") {\n            scan(val, fn, 1);\n          }\n          if (watchDog) {\n            fn(val)\n          }\n        }  \n      );\n    }\n\n    if (this.state.isLoading) {\n      setTimeout(() => {\n        scan(this.state,scanJob,0);\n      }, 1000)\n    }else{\n       scan(this.state,scanJob,0);\n    }\n    \n    let Lat = Number(Pos[0]);\n    let Lon = Number(Pos[1]);\n\n    /* Centering the Map Image */\n    let windowHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    let windowWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    \n    let mapHeight = windowWidth * 30/100;\n    let mapWidth = windowWidth * 60/100;\n    let topOffset = (windowHeight - mapHeight)/2;\n    let leftOffset = (windowWidth - mapWidth)/2;\n    let mapHeightUnit = mapHeight/180;\n    let mapWidthUnit = mapWidth/360;\n\n    let mapCenterHeight = topOffset +  mapHeight/2;\n    let mapCenterWidth = leftOffset + mapWidth/2;\n\n    /* Positioning the Iss over the map */\n    let issTop = mapCenterHeight  - (Lat * mapHeightUnit);\n    let issLeft = mapCenterWidth  + (Lon * mapWidthUnit);\n\n    const imgStyle = {\n      display: 'flex',\n      position: 'absolute',\n      width: mapWidth,\n      height: mapHeight,\n      zIndex: '-1',\n      top: topOffset,\n      left: leftOffset,\n    }\n \n    return this.state.isLoading && Update === 1?\n    <h1>Loading</h1> :\n    (\n      <div className='tc'>\n        <h1>ISS CURRENT LOCATION</h1>\n        <h3>lattitude = {Lat} , Longitude = {Lon}</h3>\n        <img src={mapImg} alt='World Map' style={imgStyle}></img>\n        <Iss Lat={issTop} Lon={issLeft}/>\n        <Update onClick = {this.afterClick}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}