{"version":3,"sources":["Iss.js","theWorldMap.jpg","Update.js","App.js","reportWebVitals.js","index.js"],"names":["Iss","styles","display","position","top","Lat","left","Lon","width","height","backgroundColor","opacity","borderRadius","zIndex","style","Update","props","onClick","App","afterClick","fetch","then","response","json","data","setState","Loc","message","timestamp","iss_position","lat","latitude","long","longitude","isLoading","catch","error","state","windowHeight","Math","max","document","documentElement","clientHeight","window","innerHeight","windowWidth","clientWidth","innerWidth","mapHeight","mapWidth","topOffset","leftOffset","mapHeightUnit","mapWidthUnit","mapCenterWidth","issTop","this","issLeft","imgStyle","className","src","mapImg","alt","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91464647.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Iss = ({Lat, Lon}) => {\r\n    \r\n    const styles = {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        top: Lat,\r\n        left: Lon,\r\n        width: '10px',\r\n        height: '10px',\r\n        backgroundColor: 'black',\r\n        opacity: 0.8,\r\n        borderRadius: '50%',\r\n        zIndex: 10,\r\n    };\r\n\r\n    return (\r\n        <div style={styles}></div>\r\n    )\r\n}\r\n\r\nexport default Iss;    ","export default __webpack_public_path__ + \"static/media/theWorldMap.8ac096d2.jpg\";","import React from 'react';\r\n\r\nfunction Update(props) {\r\n    return (\r\n      <button onClick={props.onClick}>\r\n        UPDATE\r\n      </button>\r\n    )\r\n  }\r\n\r\n  export default Update;","import React, { Component } from 'react';\nimport Iss from './Iss';\nimport mapImg from './theWorldMap.jpg';\nimport Update from './Update.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      isLoading: true,\n      Loc: {\n        message: '', \n        timestamp: '', \n        iss_position: {\n          lat: 0, \n          long: 0\n        }\n      },\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    fetch ('http://api.open-notify.org/iss-now.json')\n      .then(response=> response.json())\n      .then((data) => \n      {\n        return(\n          this.setState\n          (\n            {\n              Loc:\n              {\n                message: data.message,\n                timestamp: data.timestamp,\n                iss_position: \n                {\n                  lat: data.iss_position.latitude,\n                  long: data.iss_position.longitude\n                }\n              },\n              isLoading: false\n            }\n          )\n        )\n      })\n      .catch(error => this.setState({ error, isLoading: false }));\n    }\n\n    afterClick = () => {\n      fetch('http://api.open-notify.org/iss-now.json')\n      .then(response=> response.json())\n      .then((data) => \n      {\n        return(\n          this.setState\n          (\n            {\n              Loc:\n              {\n                message: data.message,\n                timestamp: data.timestamp,\n                iss_position: \n                {\n                  lat: data.iss_position.latitude,\n                  long: data.iss_position.longitude\n                }\n              },\n              isLoading: false\n            }\n          )\n        )\n      })\n      .catch(error => this.setState({ error, isLoading: false }));\n    }\n \n   render() {\n    /* Centering the Map Image */\n    let windowHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    let windowWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    \n    let mapHeight = windowWidth * 30/100;\n    let mapWidth = windowWidth * 60/100;\n    let topOffset = (windowHeight - mapHeight)/2;\n    let leftOffset = (windowWidth - mapWidth)/2;\n    let mapHeightUnit = mapHeight/180;\n    let mapWidthUnit = mapWidth/360;\n\n    let mapCenterHeight = topOffset +  mapHeight/2;\n    let mapCenterWidth = leftOffset + mapWidth/2;\n\n    let issTop = mapCenterHeight  - (this.state.Loc.iss_position.lat * mapHeightUnit);\n    let issLeft = mapCenterWidth  + (this.state.Loc.iss_position.long * mapWidthUnit);\n\n    const imgStyle = {\n      display: 'flex',\n      position: 'absolute',\n      width: mapWidth,\n      height: mapHeight,\n      zIndex: '-1',\n      top: topOffset,\n      left: leftOffset,\n    }\n \n    return this.state.isLoading && Update === 1?\n    <h1>Loading</h1> :\n    (\n      <div className='tc'>\n        <h1>ISS CURRENT LOCATION</h1>\n        <h3>lattitude = {this.state.Loc.iss_position.lat} , Longitude = {this.state.Loc.iss_position.long}</h3>\n        <img src={mapImg} alt='World Map' style={imgStyle}></img>\n        <Iss Lat={issTop} Lon={issLeft}/>\n        <Update onClick = {this.afterClick}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}